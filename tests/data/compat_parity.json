{
  "asyncio": {
    "compat": [
      "CancelledError",
      "Future",
      "Task",
      "TaskGroup",
      "gather",
      "get_event_loop",
      "get_running_loop",
      "new_event_loop",
      "run",
      "run_in_executor",
      "sleep",
      "to_thread"
    ],
    "extra_in_compat": [
      "run_in_executor"
    ],
    "missing_in_compat": [
      "ALL_COMPLETED",
      "AbstractEventLoop",
      "AbstractServer",
      "Barrier",
      "BaseEventLoop",
      "BaseProtocol",
      "BaseTransport",
      "BoundedSemaphore",
      "BrokenBarrierError",
      "BufferedProtocol",
      "Condition",
      "DatagramProtocol",
      "DatagramTransport",
      "Event",
      "EventLoop",
      "FIRST_COMPLETED",
      "FIRST_EXCEPTION",
      "FrameCallGraphEntry",
      "FutureCallGraph",
      "Handle",
      "IncompleteReadError",
      "InvalidStateError",
      "LifoQueue",
      "LimitOverrunError",
      "Lock",
      "PriorityQueue",
      "Protocol",
      "Queue",
      "QueueEmpty",
      "QueueFull",
      "QueueShutDown",
      "ReadTransport",
      "Runner",
      "SelectorEventLoop",
      "Semaphore",
      "SendfileNotAvailableError",
      "Server",
      "StreamReader",
      "StreamReaderProtocol",
      "StreamWriter",
      "SubprocessProtocol",
      "SubprocessTransport",
      "Timeout",
      "TimeoutError",
      "TimerHandle",
      "Transport",
      "WriteTransport",
      "_enter_task",
      "_get_running_loop",
      "_leave_task",
      "_register_task",
      "_set_running_loop",
      "_unregister_task",
      "all_tasks",
      "as_completed",
      "capture_call_graph",
      "create_eager_task_factory",
      "create_subprocess_exec",
      "create_subprocess_shell",
      "create_task",
      "current_task",
      "eager_task_factory",
      "ensure_future",
      "format_call_graph",
      "future_add_to_awaited_by",
      "future_discard_from_awaited_by",
      "get_event_loop_policy",
      "iscoroutine",
      "iscoroutinefunction",
      "isfuture",
      "open_connection",
      "open_unix_connection",
      "print_call_graph",
      "run_coroutine_threadsafe",
      "set_event_loop",
      "set_event_loop_policy",
      "shield",
      "start_server",
      "start_unix_server",
      "timeout",
      "timeout_at",
      "wait",
      "wait_for",
      "wrap_future"
    ],
    "stdlib": [
      "ALL_COMPLETED",
      "AbstractEventLoop",
      "AbstractServer",
      "Barrier",
      "BaseEventLoop",
      "BaseProtocol",
      "BaseTransport",
      "BoundedSemaphore",
      "BrokenBarrierError",
      "BufferedProtocol",
      "CancelledError",
      "Condition",
      "DatagramProtocol",
      "DatagramTransport",
      "Event",
      "EventLoop",
      "FIRST_COMPLETED",
      "FIRST_EXCEPTION",
      "FrameCallGraphEntry",
      "Future",
      "FutureCallGraph",
      "Handle",
      "IncompleteReadError",
      "InvalidStateError",
      "LifoQueue",
      "LimitOverrunError",
      "Lock",
      "PriorityQueue",
      "Protocol",
      "Queue",
      "QueueEmpty",
      "QueueFull",
      "QueueShutDown",
      "ReadTransport",
      "Runner",
      "SelectorEventLoop",
      "Semaphore",
      "SendfileNotAvailableError",
      "Server",
      "StreamReader",
      "StreamReaderProtocol",
      "StreamWriter",
      "SubprocessProtocol",
      "SubprocessTransport",
      "Task",
      "TaskGroup",
      "Timeout",
      "TimeoutError",
      "TimerHandle",
      "Transport",
      "WriteTransport",
      "_enter_task",
      "_get_running_loop",
      "_leave_task",
      "_register_task",
      "_set_running_loop",
      "_unregister_task",
      "all_tasks",
      "as_completed",
      "capture_call_graph",
      "create_eager_task_factory",
      "create_subprocess_exec",
      "create_subprocess_shell",
      "create_task",
      "current_task",
      "eager_task_factory",
      "ensure_future",
      "format_call_graph",
      "future_add_to_awaited_by",
      "future_discard_from_awaited_by",
      "gather",
      "get_event_loop",
      "get_event_loop_policy",
      "get_running_loop",
      "iscoroutine",
      "iscoroutinefunction",
      "isfuture",
      "new_event_loop",
      "open_connection",
      "open_unix_connection",
      "print_call_graph",
      "run",
      "run_coroutine_threadsafe",
      "set_event_loop",
      "set_event_loop_policy",
      "shield",
      "sleep",
      "start_server",
      "start_unix_server",
      "timeout",
      "timeout_at",
      "to_thread",
      "wait",
      "wait_for",
      "wrap_future"
    ]
  },
  "concurrent.futures": {
    "compat": [
      "ALL_COMPLETED",
      "CancelledError",
      "Executor",
      "FIRST_COMPLETED",
      "FIRST_EXCEPTION",
      "Future",
      "ProcessPoolExecutor",
      "ThreadPoolExecutor",
      "TimeoutError",
      "as_completed",
      "wait"
    ],
    "extra_in_compat": [],
    "missing_in_compat": [
      "BrokenExecutor",
      "InterpreterPoolExecutor",
      "InvalidStateError"
    ],
    "stdlib": [
      "ALL_COMPLETED",
      "BrokenExecutor",
      "CancelledError",
      "Executor",
      "FIRST_COMPLETED",
      "FIRST_EXCEPTION",
      "Future",
      "InterpreterPoolExecutor",
      "InvalidStateError",
      "ProcessPoolExecutor",
      "ThreadPoolExecutor",
      "TimeoutError",
      "as_completed",
      "wait"
    ]
  }
}
