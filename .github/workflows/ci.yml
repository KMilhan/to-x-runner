name: CI

on:
  push:
    branches: [main]
  pull_request:

jobs:
  lint:
    name: Lint (py${{ matrix.python-version }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.11", "3.12", "3.13", "3.14-dev"]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          python-version: ${{ matrix.python-version }}
      - name: Sync dependencies
        run: uv sync --group dev --locked --python ${{ matrix.python-version }}
      - name: Run lint suite
        run: make lint-check

  test:
    name: Test (py${{ matrix.python-version }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.11", "3.12", "3.13", "3.14-dev"]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          python-version: ${{ matrix.python-version }}
      - name: Sync dependencies
        run: uv sync --group dev --locked --python ${{ matrix.python-version }}
      - name: Run pytest
        run: make test

  benchmark:
    name: Benchmark (py${{ matrix.python-version }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.11", "3.12", "3.13", "3.14-dev"]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          python-version: ${{ matrix.python-version }}
      - name: Sync dependencies
        run: uv sync --extra benchmark --locked --python ${{ matrix.python-version }}
      - name: Run benchmark suite
        run: uv run python -m unirun_bench --profile all --samples 1 --duration 0.05 --limit 50000 --json
