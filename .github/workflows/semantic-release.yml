name: Semantic Release with Girokmoji

on:
  workflow_dispatch:
    inputs:
      bump:
        description: "Semantic version segment to bump"
        required: true
        type: choice
        options:
          - patch
          - minor
          - major
        default: patch

permissions:
  contents: write
  packages: write
  id-token: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install uv
        uses: astral-sh/setup-uv@v5

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"
          allow-prereleases: true

      - name: Install CPython 3.14 preview
        run: |
          uv python install 3.14-dev
          uv venv --python 3.14-dev

      - name: Configure git identity
        run: |
          git config user.name "girokmoji"
          git config user.email "release@girokmoji"

      - name: Install project dependencies
        run: uv pip install --python 3.14-dev .[benchmark]

      - name: Run test suite
        run: uv run --python 3.14-dev pytest

      - name: Generate release notes with girokmoji
        id: girokmoji
        run: |
          uvx --from "girokmoji@latest" --python 3.13 girokmoji release Unirun \
            --bump ${{ inputs.bump }} \
            --repo-dir . > release.md
          latest_tag="$(git describe --tags --abbrev=0)"
          echo "tag=${latest_tag}" >> "$GITHUB_OUTPUT"

      - name: Push version bump and tags
        run: |
          git push origin HEAD:${{ github.ref }}
          git push origin --tags

      - name: Upload release notes artifact
        uses: actions/upload-artifact@v4
        with:
          name: girokmoji-release-note
          path: release.md

      - name: Create GitHub release
        uses: softprops/action-gh-release@v1
        with:
          body_path: release.md
          tag_name: ${{ steps.girokmoji.outputs.tag }}
          name: "Unirun ${{ steps.girokmoji.outputs.tag }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
